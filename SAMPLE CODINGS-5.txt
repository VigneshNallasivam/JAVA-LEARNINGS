//SAMPLE CODINGS-5



                                             SAMPLE CODINGS-5
											 ================
Example:-
---------
//PERMUTATIONS
public class Sample 
{
	public void permute(String str,int Qa,int Qb)
	{
		if(Qa==Qb)
			System.out.println(str);
		else
		{
			for(int i=Qa ; i<=Qb ; i++)
			{
				str = swap(str,Qa,i);
				permute(str,Qa+1,Qb);
				str = swap(str,Qa,i);
			}
		}
	}
	public String swap(String str,int a,int b)
	{
		char temp;                        
		char cArray[] = str.toCharArray();
		temp = cArray[a];                 
		cArray[a]=cArray[b];              
		cArray[b]=temp;                   
		return String.valueOf(cArray);    
	}
	public static void main(String[] args)
	{
		Sample objx = new Sample();
		Scanner scanner = new Scanner(System.in);
		System.out.println("Enter A String To Perform Permutation :-");
		String str = scanner.nextLine();
		int Qa = 0;
		int Qb = str.length()-1;
		System.out.println("Permutations of a String Is :-");
		objx.permute(str,Qa,Qb);
	}
}
OUTPUT>>
--------
Enter A String To Perform Permutation :-
come
Permutations of a String Is :-
come
coem
cmoe
cmeo
cemo
ceom
ocme
ocem
omce
omec
oemc
oecm
moce
moec
mcoe
mceo
meco
meoc
eomc
eocm
emoc
emco
ecmo
ecom


Example:-
---------
//INSERTION SORT
public class Sample 
{
	static void sort(int array[])
	{
		for(int i=1 ; i<array.length ; i++)
		{
			int key = array[i];
			int x = i-1;
			while((x > -1) && (array[x] > key))
			{
				array[x+1] = array[x];
				x--;
			}
			array[x+1]=key;
		}
	}
	public static void main(String[] args)
	{
		int array[] = {12,11,13,5,6};
		System.out.println("***Before Insertion-Sort***");
		for(int show:array)
		{
			System.out.print(show +" ");
		}
		sort(array);
		System.out.println();
		System.out.println("***After Insertion-Sort***");
		for(int show:array)
		{
			System.out.print(show +" ");
		}
	}
}
OUTPUT>>
--------
***Before Insertion-Sort***
12 11 13 5 6 
***After Insertion-Sort***
5 6 11 12 13 


Example:-
---------
//BUBBLE SORT
public class Sample 
{
	static void sort(int array[])
	{
		int temp =0;
		for(int i =0 ; i<array.length ; i++)
		{
			for(int k = 1 ; k < array.length-1 ; k++)
			{
				if(array[k-1] > array[k])
				{
					temp = array[k-1];
					array[k-1] = array[k];
					array[k] = temp;
				}
			}
		}
	}
	public static void main(String[] args)
	{
		int array[] = {5,1,4,2,8};
		System.out.println("***Before Bubble-Sort***");
		for(int show:array)
		{
			System.out.print(show +" ");
		}
		System.out.println();
		sort(array);
		System.out.println("***After Bubble-Sort***");
		for(int show:array)
		{
			System.out.print(show +" ");
		}
	}
}
OUTPUT>>
--------
***Before Bubble-Sort***
5 1 4 2 8 
***After Bubble-Sort***
1 2 4 5 8 

Example:-
---------
//STORING PRIME-NUMBERS IN AN ARRAY
//FILE-A//
public class Sample
{
	public void printArray(int[] array) 
	{
		for (int i = 0; i < array.length; i++) 
		{
			System.out.print(array[i] + ", ");
		}
	}

	public boolean isPrime(int number) 
	{
		boolean status = true;
		if (number == 1 || number == 0) 
		{
			status = false;
		}
		else 
		{
			for (int i = 2; i < number; i++) 
			{
				if (number % i == 0) 
				{
					status = false;
					break;
				}
			}
		}
		return status;
	}

	public int countOfNonPrime(int initialNumber, int finalNumber) 
	{

		int count = 0;
		for (int i = initialNumber; i <= finalNumber; i++) 
		{
			if (isPrime(i) == false) 
			{
				count++;
			}
		}
		return count;
	}

	public void nonPrimeArray(int initialNumber, int finalNumber) 
	{

		int[] array = new int[countOfNonPrime(initialNumber, finalNumber)];
		int arrayLength = 0;
		for (int i = initialNumber; i <= finalNumber; i++)
		{
			if (isPrime(i) == false)
			{
				array[arrayLength] = i;
				arrayLength++;
			}
		}
		printArray(array);
	}

	public void printPrimeNumbers(int initialNumber, int finalNumber) 
	{
		for (int i = initialNumber; i <= finalNumber; i++) 
		{
			if (isPrime(i) == true) 
			{
				System.out.print(i + ", ");
			}
		}
	}
}

//FILE-B//
public class ValuesStoredInArray 
{
	public static void main(String[] args) 
	{
        Sample prime = new Sample();
		int initialNumber = 1;
		int finalNumber = 100;
		System.out.println("Print Prime numbers");
		prime.printPrimeNumbers(initialNumber,finalNumber);
		System.out.println("Count of non Prime Number "+initialNumber+" to "+finalNumber);
		int count = prime.countOfNonPrime(initialNumber,finalNumber);
		System.out.println("Count of Non Prime numbers : "+count);
		System.out.println("Store non Prime Number in array of range "+initialNumber+" to "+finalNumber);
		prime.nonPrimeArray(initialNumber,finalNumber);
    }
}
OUTPUT>>
--------
Print Prime numbers
2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, Count of non Prime Number 1 to 100
Count of Non Prime numbers : 75
Store non Prime Number in array of range 1 to 100
1, 4, 6, 8, 9, 10, 12, 14, 15, 16, 18, 20, 21, 22, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 38, 39, 40, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 68, 69, 70, 72, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100,

Example:-
---------
//REMOVING ZEROS FROM AN ARRAY
import java.util.ArrayList;
public class RemovesZerosInArray 
{
	public static void print(int[] array) 
	{
		for (int i = 0; i < array.length; i++) 
		{
			System.out.print(array[i] + " ,");
		}
		System.out.println();
	}
	public static void sort(int[] array) 
	{
		for (int i = 0; i < array.length; i++) 
		{
			for (int j = 0; j < array.length; j++) 
			{
				if (array[i] < array[j]) 
				{
					int temp = array[i];
					array[i] = array[j];
					array[j] = temp;
				}
			}
		}
	}
	public static void main(String[] args) 
	{
		int[] array = {0, 5, 6, 7, 8, 4, 2, 0, 0, 6, 9, 4, 0, 3, 2, 8, 1};
		System.out.println("Before Sorting : ");
		print(array);
		sort(array);
		System.out.println("After Sorting : ");
		print(array);
		ArrayList<Integer> list = new ArrayList<>();
		for (int i = 0; i < array.length; i++) 
		{
			if (array[i] != 0) 
			{
				list.add(array[i]);
			}
		}
		int[] nonZeroArray = new int[list.size()];
		System.out.println("Non zero array : ");
		for (int i = 0; i < nonZeroArray.length; i++) 
		{
			nonZeroArray[i] = list.get(i);
		}
		print(nonZeroArray);
	}
}
OUTPUT>>
--------
Before Sorting : 
0 ,5 ,6 ,7 ,8 ,4 ,2 ,0 ,0 ,6 ,9 ,4 ,0 ,3 ,2 ,8 ,1 ,
After Sorting : 
0 ,0 ,0 ,0 ,1 ,2 ,2 ,3 ,4 ,4 ,5 ,6 ,6 ,7 ,8 ,8 ,9 ,
Non zero array : 
1 ,2 ,2 ,3 ,4 ,4 ,5 ,6 ,6 ,7 ,8 ,8 ,9 ,

Example:-
---------
//VERY SIMPLE PRIME-NUMBERS CODINGS
import java.util.Scanner;
public class Sample 
{
	public static boolean isPrime(int number)
	{
		if(number==0||number==1)
		{
			return false;
		}
		for(int i=2; i<number; i++)
		{ 
			if(number%i==0)
			{
				return false;
			}
		} 
		return true;
	}
	public static void main(String[] args) 
	{
		int N = 100;  
		for(int i=1; i<=N; i++)
		{ 
			if(isPrime(i)==true) 
			{
				System.out.println(i+" ");
			}
		} 
	}
}
OUTPUT>>
--------
2 
3 
5 
7 
11 
13 
17 
19 
23 
29 
31 
37 
41 
43 
47 
53 
59 
61 
67 
71 
73 
79 
83 
89 
97 
