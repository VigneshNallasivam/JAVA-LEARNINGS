//SAMPLE CODINGS-3



                                                SAMPLE CODINGS-3
												================

Example1:-
----------
//FINDING A NUMBER IS PERFECT NUMBER / NOT
import java.util.Scanner;
public class PerfectNumber
{
	public static void main(String[] args)
	{
		long number;
		long sum = 0;
		Scanner scanner = new Scanner(System.in);
		System.out.println("Enter a Number : ");
		number = scanner.nextLong();
		int i=1;
		
		while(i <= number/2)
		{
			if(number % i == 0)
			{
				sum = sum+i;
			}
			i++;
		}
		
		if(sum==number)
			System.out.println(number+ " Is a Perfect Number");
		else
			System.out.println(number+ " Is NOT a Perfect Number");
		
	}
}

OUTPUT>>
--------
Enter a Number : 
6
6 Is a Perfect Number




Example2.0:-
------------
//FREQUENCY OF AN ARRAY USING VISITED ARRAY
import java.util.Arrays;
public class Sample 
{
	public static void countFreq(int array[],int N)
	{
		boolean visited[] = new boolean[N];
		Arrays.fill(visited, false);               
		
		for (int i=0 ; i<N ; i++)             
		{
			if(visited[i]==true)                   
				continue;
			
			int count = 1;                    
			
			for(int j=i+1 ; j<N ; j++)        
			{
				if(array[i]==array[j])        
				{
					visited[j]=true;
					count++;                 
				}
				
			}
			System.out.println(array[i] + " occurs " + count + " times "); 
		}
		
	}
	
	public static void main(String[] args)
	{
		int array[] = {10, 30, 10, 20, 10, 20, 30, 10};
		int N = array.length;                                                
		countFreq(array,N);
	}

}
OUTPUT>>
--------
10 occurs 4 times 
30 occurs 2 times 
20 occurs 2 times 


                                                            ((or))
															
Example2.1:-
------------
//FREQUENCY OF AN ARRAY 
public class Sample 
{
	public static void countFreq(int array[],int N)
	{
		for (int i=0 ; i<N ; i++)             
		{
			int count = 1;                    
			
			for(int j=i+1 ; j<N ; j++)        
			{
				if(array[i]==array[j])        
				{
					count++;                 
				}
				
			}
			System.out.println(array[i] + " occurs " + count + " times "); 
		}
		
	}
	
	public static void main(String[] args)
	{
		int array[] = {10, 30, 10, 20, 10, 20, 30, 10};
		int N = array.length;                                
		countFreq(array,N);
	}

}
OUTPUT>>
--------
10 occurs 4 times 
30 occurs 2 times 
10 occurs 3 times 
20 occurs 2 times 
10 occurs 2 times 
20 occurs 1 times 
30 occurs 1 times 
10 occurs 1 times 


Example:-
---------
//INTERSECTION OF 2 Arrays
public class New 
{
	public static void main(String[] args)
	{
		int arrayA[] = {1,2,3,4,5,6};
		int arrayB[] = {1,3,5,7,9};
		System.out.println("Intersection Of Array Is : ");
		for(int i=0;i<arrayA.length;i++)
		{
			for(int j=0;j<arrayB.length;j++)
			{
				if(arrayA[i]==arrayB[j])
				{
					System.out.print(arrayA[i]+" ");
				}
			}
		}
	}
}
OUTPUT>>
--------
Intersection Of Array Is : 
1 3 5 




Example:-
---------
//UNION OF 2 Arrays//COMBINING 2 ARRAYS
import java.util.HashSet;
import java.util.Set;
public class New 
{
	public static void main(String[] args)
	{
		Set<Integer> ref = new HashSet<>();
		int arrayA[] = {1,2,3,4,5};
		int arrayB[] = {6,7,8,9,10};
		for(int i=0;i<arrayA.length;i++)
		{
			for(int j=0;j<arrayB.length;j++)
			{
				ref.add(arrayA[i]);
				ref.add(arrayB[j]);
			}
		}
		System.out.println("The Union of Two Arrays Is : "+ref);
	}
}
OUTPUT>>
--------
The Union of Two Arrays Is : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]


Example:-
---------
//UNION OF 2 Arrays//COMBINING 2 ARRAYS
import java.util.Arrays;
public class New 
{
	public static void main(String[] args)
	{
		int array1[] = {1,2,3,4,5};
		int array2[] = {6,7,8,9,10};
		int array3[] = new int[array1.length + array2.length];
		int position = 0;
		for(int values:array1)
		{
			array3[position] = values;
			position++;
		}
		for(int values:array2)
		{
			array3[position] = values;
			position++;
		}
		System.out.println(Arrays.toString(array3));
	}
}
OUTPUT>>
--------
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]


Example:-
---------
//FINDING/SEARCHING AN ELEMENT IN AN ARRAY
public class Finding 
{
	public void found()
	{
		Scanner scanner = new Scanner(System.in);
		System.out.println("Enter Length : ");
		int N = scanner.nextInt();
		int array[] = new int[N];
		System.out.println("Enter the elements of an Array : ");
		for(int i=0;i<N;i++)
		{
			array[i]=scanner.nextInt();
		}
		System.out.println("Elements of Array Are : ");
		for(int i=0;i<N;i++)
		{
			System.out.println(array[i]+" ");
		}
		System.out.println("Enter particular element to be searched : ");
		int search = scanner.nextInt();
		for(int i=0;i<N;i++)
		{
			if(array[i]==search)
			{
				System.out.println("Element " +search+" found at "+i+" position ");
				break;
			}
		}
	}
	public static void main(String[] args)
	{
		Finding objx = new Finding();
		objx.found();
	}

}
OUTPUT>>
--------
Enter Length : 
3
Enter the elements of an Array : 
11
12
13
Elements of Array Are : 
11 
12 
13 
Enter particular element to be searched : 
12
Element 12 found at 1 position 


Example:-
---------
//PRINTING +Ve & -Ve VALUES IN AN ARRAY
import java.util.Scanner;
public class Finding 
{
	public void positiveNegative()
	{
		Scanner scanner = new Scanner(System.in);
		System.out.println("Enter Length : ");
		int N = scanner.nextInt();
		int array[] = new int[N];
		System.out.println("Enter the elements of an Array : ");
		for(int i=0;i<N;i++)
		{
			array[i]=scanner.nextInt();
		}
		System.out.println("Elements of Array Are : ");
		for(int i=0;i<N;i++)
		{
			System.out.println(array[i]+" ");
		}
		for(int i=0;i<N;i++)
		{
			if(array[i] >= 0)
			{
				System.out.println("Element " +array[i]+" is  positive");
			}
			else
				System.out.println("Element " +array[i]+" is Negative");
		}
	}
	public static void main(String[] args)
	{
		Finding objx = new Finding();
		objx.positiveNegative();
	}

}
OUTPUT>>
--------
Enter Length : 
3
Enter the elements of an Array : 
-11
-12
13
Elements of Array Are : 
-11 
-12 
13 
Element -11 is Negative
Element -12 is Negative
Element 13 is  positive


